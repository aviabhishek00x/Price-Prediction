
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author kumar
 */
public class User extends javax.swing.JFrame {

	/**
	 * Creates new form User
	 */
	public User() {
		initComponents();

	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        choices = new javax.swing.JComboBox<>();
        inputField = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        cartBtn = new javax.swing.JButton();
        idlabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        userTable.setFont(new java.awt.Font("Utsaah", 3, 18)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price 2021", "Price 2022"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.setColumnSelectionAllowed(true);
        userTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(userTable);
        userTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel1.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("User");

        choices.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        choices.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select to view", "Processors", "RAMs", "GPUs" }));
        choices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choicesActionPerformed(evt);
            }
        });

        inputField.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N

        addBtn.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        addBtn.setText("Add to cart");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        cartBtn.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        cartBtn.setText("Cart");
        cartBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartBtnActionPerformed(evt);
            }
        });

        idlabel.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        idlabel.setText("Enter the ID to add into cart:- ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(choices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(cartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(30, 30, 30))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idlabel)
                        .addGap(30, 30, 30)
                        .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cartBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(choices, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
		dispose();
		Welcome w = new Welcome();
		w.setVisible(true);
        }//GEN-LAST:event_backBtnActionPerformed

        private void choicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choicesActionPerformed
		if (evt.getSource() == choices) {
			if (choices.getSelectedItem() != null) {
				String selectedOption = choices.getSelectedItem().toString();

				try {
					Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/predictionsystem", "root", "Database_Password@2023");
					Statement st = con.createStatement();
					String sql = "";

					switch (selectedOption) {
						case "Select to view": {
							DefaultTableModel table = (DefaultTableModel) userTable.getModel();
							table.setRowCount(0);
							break;
						}
						case "Processors": {
							sql = "select * from processordata";
							ResultSet rs = st.executeQuery(sql);
							DefaultTableModel table = (DefaultTableModel) userTable.getModel();
							table.setRowCount(0);
							while (rs.next()) {
								String id = rs.getString("ID");
								String name = rs.getString("Name");
								String price1 = rs.getString("Price_Two");
								String price2 = rs.getString("Price_One");

								String tbData[] = {id, name, price1, price2};
								table.addRow(tbData);
							}
							break;
						}
						case "RAMs": {
							sql = "select * from ramdata";
							ResultSet rs = st.executeQuery(sql);
							DefaultTableModel table = (DefaultTableModel) userTable.getModel();
							table.setRowCount(0);
							while (rs.next()) {
								String id = rs.getString("ID");
								String name = rs.getString("Name");
								String price1 = rs.getString("Price_Two");
								String price2 = rs.getString("Price_One");

								String tbData[] = {id, name, price1, price2};
								table.addRow(tbData);
							}
							break;
						}
						case "GPUs": {
							sql = "select * from gpudata";
							ResultSet rs = st.executeQuery(sql);
							DefaultTableModel table = (DefaultTableModel) userTable.getModel();
							table.setRowCount(0);
							while (rs.next()) {
								String id = rs.getString("ID");
								String name = rs.getString("Name");
								String price1 = rs.getString("Price_Two");
								String price2 = rs.getString("Price_One");

								String tbData[] = {id, name, price1, price2};
								table.addRow(tbData);
							}
							break;
						}
						default:
							break;
					}

				} catch (Throwable e) {
					e.printStackTrace();
				}
			}
		}
        }//GEN-LAST:event_choicesActionPerformed

        private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed

		String so = choices.getSelectedItem().toString();

		try {
			Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/predictionsystem", "root", "Database_Password@2023");
			String in = inputField.getText();
			String sql = "";
			Statement st = con.createStatement();
                    switch (so) {
                        case "Processors":
                            {
                                sql = "INSERT INTO carttrack (ID, Name, Price_Two, Price_One) SELECT ID,Name, Price_Two, Price_One FROM processordata WHERE ID = '" + in + "'";
                                int rowsInserted = st.executeUpdate(sql);
                                if (rowsInserted > 0) {
                                    JOptionPane.showMessageDialog(this, "Added to cart", "Success", JOptionPane.INFORMATION_MESSAGE);
                                    
                                    
                                } else {
                                    JOptionPane.showMessageDialog(this, "Maybe following things occured an error\n• Input might be empty", "Can't Delete !!!", JOptionPane.ERROR_MESSAGE);
                                }
                                inputField.setText("");
                                break;
                            }
                        case "RAMs":
                            {
                                sql = "INSERT INTO carttrack (ID, Name, Price_Two, Price_One) SELECT ID,Name, Price_Two, Price_One FROM ramdata WHERE ID = '" + in + "'";
                                int rowsInserted = st.executeUpdate(sql);
                                if (rowsInserted > 0) {
                                    JOptionPane.showMessageDialog(this, "Added to cart", "Success", JOptionPane.INFORMATION_MESSAGE);
                                    
                                    
                                } else {
                                    JOptionPane.showMessageDialog(this, "Maybe following things occured an error\n• Input might be empty", "Can't Delete !!!", JOptionPane.ERROR_MESSAGE);
                                }
                                inputField.setText("");
                                break;
                            }
                        case "GPUs":
                            {
                                sql = "INSERT INTO carttrack (ID, Name, Price_Two, Price_One) SELECT ID,Name, Price_Two, Price_One FROM gpudata WHERE ID = '" + in + "'";
                                int rowsInserted = st.executeUpdate(sql);
                                if (rowsInserted > 0) {
                                    JOptionPane.showMessageDialog(this, "Added to cart", "Success", JOptionPane.INFORMATION_MESSAGE);
                                    
                                    
                                } else {
                                    JOptionPane.showMessageDialog(this, "Maybe following things occured an error\n• Input might be empty", "Can't Delete !!!", JOptionPane.ERROR_MESSAGE);
                                }
                                inputField.setText("");
                                break;
                            }
                        default:
                            break;
                    }

		} catch (Throwable e) {
			e.printStackTrace();
		}


        }//GEN-LAST:event_addBtnActionPerformed

        private void cartBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartBtnActionPerformed
dispose();
Cart c=new Cart();
c.setVisible(true);
        }//GEN-LAST:event_cartBtnActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new User().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton cartBtn;
    private javax.swing.JComboBox<String> choices;
    private javax.swing.JLabel idlabel;
    private javax.swing.JTextField inputField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
