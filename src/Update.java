/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kumar
 */
public class Update extends javax.swing.JFrame {

	/**
	 * Creates new form Update
	 */
	public Update() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        choices = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        updateTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        priceTwo = new javax.swing.JTextField();
        priceOne = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        jLabel2.setText("Updating");

        choices.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        choices.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select to view", "Processors", "RAMs", "GPUs" }));
        choices.setName(""); // NOI18N
        choices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choicesActionPerformed(evt);
            }
        });

        updateTable.setFont(new java.awt.Font("Utsaah", 3, 18)); // NOI18N
        updateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price 2021", "Price 2022"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        updateTable.setColumnSelectionAllowed(true);
        updateTable.setShowGrid(true);
        jScrollPane1.setViewportView(updateTable);
        updateTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jLabel3.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        jLabel3.setText("Hardware Name :-");

        jLabel4.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        jLabel4.setText("Price 2020 :- ");

        jLabel5.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        jLabel5.setText("Price 2021 :-");

        id.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N

        name.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N

        priceTwo.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N

        priceOne.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        priceOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceOneActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
        jLabel1.setText("Hardware ID :-");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(id)
                                    .addComponent(name)
                                    .addComponent(priceTwo)
                                    .addComponent(priceOne, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(choices, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jButton1)
                                .addGap(30, 30, 30)
                                .addComponent(jButton2)))
                        .addGap(78, 78, 78)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(choices, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(priceTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceOne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void choicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choicesActionPerformed
		if (evt.getSource() == choices) {
			if (choices.getSelectedItem() != null) {
				String so = choices.getSelectedItem().toString();

				try {
					Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/predictionsystem", "root", "Database_Password@2023");
					Statement st = con.createStatement();
					String sql = "";
					switch (so) {
						case "Select to view":
							{
								DefaultTableModel table = (DefaultTableModel) updateTable.getModel();
								table.setRowCount(0);
								break;
							}
						case "Processors":
							{
								sql = "select * from processordata";
								ResultSet rs = st.executeQuery(sql);
								DefaultTableModel table = (DefaultTableModel) updateTable.getModel();
								table.setRowCount(0);
								while (rs.next()) {
									String id = rs.getString("ID");
									String name = rs.getString("Name");
									String price1 = rs.getString("Price_Two");
									String price2 = rs.getString("Price_One");
									
									String tbData[] = {id, name, price1, price2};
									table.addRow(tbData);
								}		break;
							}
						case "RAMs":
							{
								sql = "select * from ramdata";
								ResultSet rs = st.executeQuery(sql);
								DefaultTableModel table = (DefaultTableModel) updateTable.getModel();
								table.setRowCount(0);
								while (rs.next()) {
									String id = rs.getString("ID");
									String name = rs.getString("Name");
									String price1 = rs.getString("Price_Two");
									String price2 = rs.getString("Price_One");
									
									String tbData[] = {id, name, price1, price2};
									table.addRow(tbData);
								}		break;
							}
						case "GPUs":
							{
								sql = "select * from gpudata";
								ResultSet rs = st.executeQuery(sql);
								DefaultTableModel table = (DefaultTableModel) updateTable.getModel();
								table.setRowCount(0);
								while (rs.next()) {
									String id = rs.getString("ID");
									String name = rs.getString("Name");
									String price1 = rs.getString("Price_Two");
									String price2 = rs.getString("Price_One");
									
									String tbData[] = {id, name, price1, price2};
									table.addRow(tbData);
								}		break;
							}
						default:
							break;
					}

				} catch (Throwable e) {
					e.printStackTrace();
				}
			}
		}
		// TODO add your handling code here:
        }//GEN-LAST:event_choicesActionPerformed

        private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		String so = choices.getSelectedItem().toString();

		try {
			Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/predictionsystem", "root", "Database_Password@2023");
			String i = id.getText();
			String n = name.getText();
			String p = priceTwo.getText();
			String p1 = priceOne.getText();
			String sql = "";

			switch (so) {
				case "Select to view":
					DefaultTableModel table = (DefaultTableModel) updateTable.getModel();
					table.setRowCount(0);
					break;
				case "Processors": {
					sql = "UPDATE processordata SET Name = ?, Price_Two = ?, Price_One = ?  WHERE ID = ?";
					PreparedStatement statement = con.prepareStatement(sql);
					statement.setString(1, n);
					statement.setString(2, p);
					statement.setString(3, p1);
					statement.setString(4, i);
					int rowsUpdated = statement.executeUpdate();
					if (rowsUpdated > 0) {
						System.out.println("Data updated successfully.");
						dispose();
						Update at = new Update();
						at.setVisible(true);
					} else {
						JOptionPane.showMessageDialog(this, "Maybe following things occured an error\n• Input might be empty", "Can't Update !!!", JOptionPane.ERROR_MESSAGE);
					}
					id.setText("");
					name.setText("");
					priceTwo.setText("");
					priceOne.setText("");
					break;
				}
				case "RAMs": {
					sql = "UPDATE ramdata SET Name = ?, Price_Two = ?, Price_One = ?  WHERE ID = ?";
					PreparedStatement statement = con.prepareStatement(sql);
					statement.setString(1, n);
					statement.setString(2, p);
					statement.setString(3, p1);
					statement.setString(4, i);
					int rowsUpdated = statement.executeUpdate();
					if (rowsUpdated > 0) {
						System.out.println("Data updated successfully.");
						dispose();
						Update at = new Update();
						at.setVisible(true);
					} else {
							JOptionPane.showMessageDialog(this, "Maybe following things occured an error\n• Input might be empty", "Can't Update !!!", JOptionPane.ERROR_MESSAGE);
					}
					id.setText("");
					name.setText("");
					priceTwo.setText("");
					priceOne.setText("");
					break;
				}
				case "GPUs": {
					sql = "UPDATE gpudata SET Name = ?, Price_Two = ?, Price_One = ?  WHERE ID = ?";
					PreparedStatement statement = con.prepareStatement(sql);
					statement.setString(1, n);
					statement.setString(2, p);
					statement.setString(3, p1);
					statement.setString(4, i);
					int rowsUpdated = statement.executeUpdate();
					if (rowsUpdated > 0) {
						System.out.println("Data updated successfully.");
						dispose();
						Update at = new Update();
						at.setVisible(true);
					} else {
						JOptionPane.showMessageDialog(this, "Maybe following things occured an error\n• Input might be empty", "Can't Update !!!", JOptionPane.ERROR_MESSAGE);

						id.setText("");
						name.setText("");
						priceTwo.setText("");
						priceOne.setText("");
					}
					break;
				}
				default:
					break;
			}

		} catch (Throwable e) {
			e.printStackTrace();
		}
		// TODO add your handling code here:
        }//GEN-LAST:event_jButton1ActionPerformed

        private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		dispose();
		AdminTable at = new AdminTable();
		at.setVisible(true);
		// TODO add your handling code here:
        }//GEN-LAST:event_jButton2ActionPerformed

    private void priceOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceOneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceOneActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Update().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> choices;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField priceOne;
    private javax.swing.JTextField priceTwo;
    private javax.swing.JTable updateTable;
    // End of variables declaration//GEN-END:variables
}
