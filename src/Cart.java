
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author kumar
 */
public class Cart extends javax.swing.JFrame {

    /**
     * Creates new form Cart
     */
    public Cart() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                jLabel1 = new javax.swing.JLabel();
                jScrollPane1 = new javax.swing.JScrollPane();
                cartTable = new javax.swing.JTable();
                backBtn = new javax.swing.JButton();
                resetBtn = new javax.swing.JButton();
                refreshBtn = new javax.swing.JButton();
                predictBtn = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                jLabel1.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
                jLabel1.setText("CART");

                cartTable.setFont(new java.awt.Font("Utsaah", 3, 18)); // NOI18N
                cartTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "ID", "Name", "Price 2021", "Price 2022", "Averaged Price"
                        }
                ) {
                        boolean[] canEdit = new boolean [] {
                                false, false, false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                        }
                });
                cartTable.setColumnSelectionAllowed(true);
                cartTable.getTableHeader().setReorderingAllowed(false);
                jScrollPane1.setViewportView(cartTable);
                cartTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

                backBtn.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
                backBtn.setText("Back");
                backBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                backBtnActionPerformed(evt);
                        }
                });

                resetBtn.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
                resetBtn.setText("RESET");
                resetBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                resetBtnActionPerformed(evt);
                        }
                });

                refreshBtn.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
                refreshBtn.setText("Refresh");
                refreshBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                refreshBtnActionPerformed(evt);
                        }
                });

                predictBtn.setFont(new java.awt.Font("Utsaah", 3, 24)); // NOI18N
                predictBtn.setText("Click to predict");
                predictBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                predictBtnActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(30, 30, 30)
                                                .addComponent(refreshBtn)
                                                .addGap(30, 30, 30)
                                                .addComponent(resetBtn)
                                                .addGap(30, 30, 30)
                                                .addComponent(predictBtn)
                                                .addGap(30, 30, 30)
                                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(30, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(refreshBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(resetBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(predictBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(25, Short.MAX_VALUE))
                );

                pack();
        }// </editor-fold>//GEN-END:initComponents

        private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
            dispose();
            User u = new User();
            u.setVisible(true);
        }//GEN-LAST:event_backBtnActionPerformed

        private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed

            try {
                Connection con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/predictionsystem", "root", "Database_Password@2023");

                Statement st = con.createStatement();// Delete all rows from the table
                String sql = "TRUNCATE table carttrack ";
                int rowsAffected = st.executeUpdate(sql);
                JOptionPane.showMessageDialog(this, "Cart resetted", "Reset", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                // Handle any database errors
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "An error occurred while removing rows from the table.",
                        "Error", JOptionPane.ERROR_MESSAGE);
            }

        }//GEN-LAST:event_resetBtnActionPerformed

        private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
            Connection con;
            try {
                con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/predictionsystem", "root", "Database_Password@2023");

                Statement st = con.createStatement();
                String sql = "";
                sql = "select * from carttrack";
                ResultSet rs = st.executeQuery(sql);
                DefaultTableModel table = (DefaultTableModel) cartTable.getModel();
                table.setRowCount(0);
                while (rs.next()) {
                    String id = rs.getString("ID");
                    String name = rs.getString("Name");
                    String price1 = rs.getString("Price_Two");
                    String price2 = rs.getString("Price_One");
                    Double convert = Double.parseDouble(price2) + Double.parseDouble(price1);
                    convert = convert / 2;
                    String tbData[] = {id, name, price1, price2, convert.toString()};
                    table.addRow(tbData);
                }

            } catch (SQLException ex) {
                Logger.getLogger(Cart.class.getName()).log(Level.SEVERE, null, ex);
            }
        }//GEN-LAST:event_refreshBtnActionPerformed

        private void predictBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_predictBtnActionPerformed

            Connection con;
            try {
                con = DriverManager.getConnection("jdbc:mysql://127.0.0.1:3306/predictionsystem", "root", "Database_Password@2023");

                Statement st = con.createStatement();
                String sql = "SELECT SUM(average) AS total_average "
                        + "FROM (SELECT (Price_Two + Price_One) / 2 AS average "
                        + "FROM carttrack) AS subquery";

                ResultSet rs = st.executeQuery(sql);

                if (rs.next()) {
                    double totalAverage = rs.getDouble("total_average");
                    DecimalFormat decimalFormat = new DecimalFormat("#.###");

                    String formattedNumber = decimalFormat.format(totalAverage);
                    JOptionPane.showMessageDialog(this, "Predicted Price for your laptop is:- $ " + formattedNumber, "Price", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (SQLException ex) {
                Logger.getLogger(Cart.class.getName()).log(Level.SEVERE, null, ex);
            }


        }//GEN-LAST:event_predictBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cart().setVisible(true);
            }
        });
    }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JButton backBtn;
        private javax.swing.JTable cartTable;
        private javax.swing.JLabel jLabel1;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JButton predictBtn;
        private javax.swing.JButton refreshBtn;
        private javax.swing.JButton resetBtn;
        // End of variables declaration//GEN-END:variables
}
